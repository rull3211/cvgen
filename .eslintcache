[{"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\index.js":"1","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\App.js":"2","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\reportWebVitals.js":"3","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\InputComp.js":"4","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Name.js":"5","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\OneLiner.js":"6","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LinkComp.js":"7","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AddButton.js":"8","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\LinkAdder.js":"9","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AboutMeComp.js":"10","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\DisplayAboutMe.js":"11","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\UtdanningEditor.js":"12","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ReferanseComp.js":"13","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Referanser.js":"14","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\SkillComp.js":"15","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\FivePointComp.js":"16","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LangComp.js":"17","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\pictureAdder.js":"18","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\cvPic.js":"19","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ColorSelector.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":16231,"mtime":1614627494166,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":887,"mtime":1611213596040,"results":"25","hashOfConfig":"22"},{"size":414,"mtime":1611213719978,"results":"26","hashOfConfig":"22"},{"size":266,"mtime":1611213739752,"results":"27","hashOfConfig":"22"},{"size":245,"mtime":1611079492475,"results":"28","hashOfConfig":"29"},{"size":344,"mtime":1611213128231,"results":"30","hashOfConfig":"22"},{"size":1081,"mtime":1611213582656,"results":"31","hashOfConfig":"22"},{"size":974,"mtime":1611213624408,"results":"32","hashOfConfig":"22"},{"size":838,"mtime":1611213705003,"results":"33","hashOfConfig":"22"},{"size":3121,"mtime":1614607248629,"results":"34","hashOfConfig":"22"},{"size":1627,"mtime":1614606155075,"results":"35","hashOfConfig":"22"},{"size":1119,"mtime":1611213647696,"results":"36","hashOfConfig":"22"},{"size":722,"mtime":1611213887980,"results":"37","hashOfConfig":"22"},{"size":1458,"mtime":1611213686506,"results":"38","hashOfConfig":"22"},{"size":496,"mtime":1611213670695,"results":"39","hashOfConfig":"22"},{"size":356,"mtime":1614599563792,"results":"40","hashOfConfig":"22"},{"size":194,"mtime":1614593634928,"results":"41","hashOfConfig":"22"},{"size":222,"mtime":1614596062388,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1cynxyt",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"160bvp5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\index.js",[],["86","87"],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\App.js",["88"],"import './App.css';\nimport React, { Component } from 'react';\nimport InputComp from './editorComponents/InputComp';\nimport Name from './displayComponents/Name';\nimport OneLiner from './displayComponents/OneLiner';\nimport AddButton from './editorComponents/AddButton';\nimport LinkAdder from './editorComponents/LinkAdder';\nimport AboutMeComp from './editorComponents/AboutMeComp'\nimport DisplayAboutMe from './displayComponents/DisplayAboutMe';\nimport UtdanningEditor from './editorComponents/UtdanningEditor';\nimport ReferaneComp from './editorComponents/ReferanseComp';\nimport SkillComp from './editorComponents/SkillComp';\nimport FivePointComp from './displayComponents/FivePointComp';\nimport Referanser from './displayComponents/Referanser'\nimport LangComp from './displayComponents/LangComp';\nimport jsPDF from 'jspdf';\nimport * as htmlToImage from 'html-to-image';\nimport PictureAdder from \"./editorComponents/pictureAdder\";\nimport CvPic from \"./displayComponents/cvPic\";\nimport ColorSelector from \"./editorComponents/ColorSelector\"\n\nclass App extends Component {\n  state = {\n    //detaljer\n    fName: \"\",\n    lName: \"\",\n    tlf: \"\",\n    email: \"\",\n    aboutMe: \"\",\n    //seksjonsoverskrifter\n    aboutmeheader: \"Om meg\",\n    Detaljer: \"Detaljer\",\n    Linker: \"Linker\",\n    Ferdigheter: \"Ferdigheter\",\n    Språk: \"Språk\",\n    Utdanning: \"Utdanning\",\n    Erfaring: \"Erfaring\",\n    Referanse: \"Referanser\",\n    Fritiden: \"På fritiden\",\n    // containere for informasjon i cven\n    skillAdders: [],\n    languageAdders: [],\n    utdanning: [],\n    erfaringer: [],\n    referanser: [],\n    fritider: [],\n    size2: {\n      width: \"35vw\",\n      height: \"48vw\"\n    },\n    oldSize : {\n      width: \"35vw\",\n      height: \"48vw\"\n    },\n     // responsiv pagesize som blir oppdatert ved eksport\n    textSize: [\"14pt\", \"13pt\", \"10pt\", \"0.65vw\", \"7pt\", \"0.4vw\"], // responsive tekstsizes som blir oppdatert ved eksport\n    img : \"\",\n    color : \"rgb(8, 76, 65)\"\n  };\n\n  inputHandler = event => {\n    let newS = {};\n    newS[event.target.id] = event.target.value;\n    this.setState(newS);\n  }; // behandler alle inputeventer hvor indeks ikke er nødvendig\n\n  indexedInputHandler = (index, event) => {\n    let id = event.target.className;\n    let newLi = this.state[id];\n    let newObj = newLi[index];\n    newObj[event.target.id] = event.target.value;\n    newLi[index] = newObj;\n    this.setState(newLi);\n  }; // behandler alle eventer relatert til input hvor indeks er nødvendig\n\n\n  addHandler = (event) => {\n    if (event.keyCode === 13 || event.type === \"click\") {\n      let id = event.target.getAttribute(\"n\");\n      let element = this.state[id].slice();\n      element.push({});\n      let newObj = {};\n      newObj[id] = element;\n      this.setState(newObj);\n    };\n  }; // behandler alle eventer relatert til addbutton\n\n \n  imageHandler = (event) => {\n    var selectedFile = event.target.files[0];\n    var reader = new FileReader();\n  \n\n    reader.onload = event => {\n      this.setState({img : event.target.result})\n      \n    };\n    reader.readAsDataURL(selectedFile)\n    console.log(this.state.img)\n  }\n  ColorSelectorHandler = event => {\n    this.setState({color : event.target.style.backgroundColor})\n    \n  }\n  \n  render() {\n   window.onload = ()=>{\n      if (window.matchMedia('(max-device-width: 1000px)').matches) {\n        this.setState({size2:{\n          width: \"100vw\",\n          height: \"100vh\"\n        }, oldSize:{\n          width: \"100vw\",\n          height: \"100vh\"\n        }})\n      }\n\n   }\n    // SeksjonsOverskrifter\n    let Detaljer = (<div style={{ fontSize: \"12\" }}><h1 style={{ fontSize: this.state.textSize[2] }} id=\"Detaljer\">{this.state.Detaljer} </h1></div>);\n    let Ferdigheter = (<div style={{ fontSize: \"12\" }}><h1 style={{ fontSize: this.state.textSize[2] }} id=\"Ferdigheter\">{this.state.Ferdigheter} </h1></div>);\n    let Språk = (<div style={{ fontSize: \"12\" }}><h1 style={{ fontSize: this.state.textSize[2] }} id=\"Språk\">{this.state.Språk} </h1></div>);\n    let Utdanning = (<div style={{ fontSize: \"14\" }}><h1 style={{ fontSize: this.state.textSize[1] }} id=\"Utdanning\">{this.state.Utdanning} </h1></div>);\n    let Erfaring = (<div style={{ fontSize: \"14\" }}><h1 style={{ fontSize: this.state.textSize[1] }} id=\"Erfaring\">{this.state.Erfaring} </h1></div>);\n    let Referanse = (<div style={{ fontSize: \"14\" }}><h1 style={{ fontSize: this.state.textSize[1] }} id=\"Referanse\">{this.state.Referanse} </h1></div>);\n    let Fritiden = (<div style={{ fontSize: \"14\" }}><h1 style={{ fontSize: this.state.textSize[1] }} id=\"Fritiden\">{this.state.Fritiden} </h1></div>);\n\n\n  // editor/adder elementer\n    let renderLanguageAdders = this.state.languageAdders.map((el, index) => {\n      return (\n        <LinkAdder\n          handler={this.indexedInputHandler.bind(this, index)}\n          cname=\"languageAdders\"\n          id1=\"språk\"\n          id2=\"nivå\"\n          ph1=\"Språk\"\n          ph2=\"Nivå\"\n          key={index}>\n        </LinkAdder>);\n    });\n    let renderSkillAdders = this.state.skillAdders.map((el, index) => {\n      return (\n        <SkillComp \n          key={index} \n          handler={this.indexedInputHandler.bind(this, index)}>\n        </SkillComp>);\n    });\n    let renderUtdanningAdders = this.state.utdanning.map((el, index) => {\n      return (\n        <UtdanningEditor\n          key={index}\n          cname=\"utdanning\"\n          handler={this.indexedInputHandler.bind(this, index)}\n          ph={[\"Grad\", \"Skole\", \"Start\", \"Slutt\", \"By\"]}>\n        </UtdanningEditor>\n      );\n    });\n    let renderErfaringAdders = this.state.erfaringer.map((el, index) => {\n      return (\n        <UtdanningEditor\n          key={index}\n          cname=\"erfaringer\"\n          handler={this.indexedInputHandler.bind(this, index)}\n          ph={[\"Tittel/jobb\", \"Ansetter/institusjon\", \"Start\", \"Slutt\", \"By\"]}>\n        </UtdanningEditor>\n      );\n    });\n    let renderReferanserAdders = this.state.referanser.map((el, index) => {\n      return (\n        <ReferaneComp\n          handler={this.indexedInputHandler.bind(this, index)}\n          cname=\"referanser\"\n          key={index}>\n        </ReferaneComp>\n      );\n    });\n    let renderFritidenAdders = this.state.fritider.map((el, index) => {\n      return (\n        <UtdanningEditor\n          cname=\"fritider\"\n          handler={this.indexedInputHandler.bind(this, index)}\n          ph={[\"Funksjonstittel/handling\", \"Ansetter/institusjon\", \"Start\", \"Slutt\", \"By\"]}\n          key={index}>\n        </UtdanningEditor>\n      );\n    });\n\n\n    // Cv element renderere\n    let renderSkills = this.state.skillAdders.map((el, index) => {\n      return (\n        <OneLiner \n          key={index} \n          font={this.state.textSize} \n          info={el.skill}>\n        </OneLiner>);\n    });\n    let renderLanguage = this.state.languageAdders.map((el, index) => {\n      return (\n        <LangComp \n          key={index} \n          font={this.state.textSize} \n          Språk={el.språk} \n          Nivå={el.nivå}>\n        </LangComp>);\n    });\n    let renderUtdanning = this.state.utdanning.map((el, index) => {\n      return (\n        <FivePointComp\n          info={[el.Grad, el.Skole, el.By, el.Start, el.Slutt, el.Beskrivelse]}\n          font={this.state.textSize}\n          key={index}>\n        </FivePointComp>\n\n      );\n    });\n    let renderErfaring = this.state.erfaringer.map((el, index) => {\n      return (\n        <FivePointComp\n          info={[el.Grad, el.Skole, el.By, el.Start, el.Slutt, el.Beskrivelse]}\n          font={this.state.textSize}\n          key={index}>\n        </FivePointComp>\n      );\n    });\n    let renderFritider = this.state.fritider.map((el, index) => {\n      return (\n        <FivePointComp\n          info={[el.Grad, el.Skole, el.By, el.Start, el.Slutt, el.Beskrivelse]}\n          font={this.state.textSize}\n          key={index}>\n        </FivePointComp>\n      );\n    });\n    let renderReferanse = this.state.referanser.map((el, index) => {\n      return (\n        <Referanser \n          key={index} \n          font={this.state.textSize} \n          info={[el.Navn, el.Org, el.Tlf, el.Email]}> \n        </Referanser>\n      );\n    });\n    \n    let pic = null\n\n    if(this.state.img != \"\"){\n      pic = <CvPic img = {this.state.img} ></CvPic>\n    }\n    \n    // editpage (venstre side) (form)\n    let editPage = (\n      <div className=\"EditPage\">\n        <div className=\"EditPageWrapper\">\n\n          <div className=\"Detaljer\">\n            <div className = \"Detaljeheader\">\n              <div className = \"FirstRow\">\n                    <InputComp sT=\"1\" id=\"Detaljer\" handler={this.inputHandler} ph=\"Detaljer (kan endres)\"></InputComp>\n                <div className = \"ColorSelectors\">\n                      <ColorSelector color = \"rgb(0, 89, 255)\" handler = {this.ColorSelectorHandler}></ColorSelector>\n                      <ColorSelector color = \"rgb(8, 76, 65)\" handler = {this.ColorSelectorHandler}></ColorSelector>\n                      <ColorSelector color = \"rgb(170, 113, 6)\" handler = {this.ColorSelectorHandler}></ColorSelector>\n                </div>\n              </div>\n             \n              <PictureAdder handler = {this.imageHandler}></PictureAdder>\n            </div>\n            <div className=\"DetaljWrapper\">\n              <div className=\"LeftSide\">\n                <p>Fornavn</p>\n                <InputComp \n                  handler={this.inputHandler} \n                  id={\"fName\"} \n                  came={\"Personalia\"} \n                  val={this.state.fName} > \n                </InputComp>\n              </div>\n              <div>\n                <p>Etternavn</p>\n                <InputComp \n                  handler={this.inputHandler} \n                  id={\"lName\"} \n                  cName={\"Personalia\"} \n                  val={this.state.lName} > \n                </InputComp>\n              </div>\n            </div>\n            <div className=\"DetaljWrapper\">\n              <div className=\"LeftSide\">\n                <p>Telefonnummer</p>\n                <InputComp\n                  handler={this.inputHandler} \n                  id={\"tlf\"} cName={\"Personalia\"} \n                  val={this.state.tlf} > \n                </InputComp>\n              </div>\n              <div>\n                <p>Email</p>\n                <InputComp \n                  handler={this.inputHandler} \n                  id={\"email\"} \n                  cName={\"Personalia\"} \n                  val={this.state.email} > \n                </InputComp>\n              </div>\n\n            </div>\n            <div>\n              <AboutMeComp handler={this.inputHandler}></AboutMeComp>\n            </div>\n              \n          </div>\n          <ul className=\"Skill\">\n            <InputComp  \n              id=\"Ferdigheter\" \n              handler={this.inputHandler} \n              ph=\"Ferdigheter (kan endres)\"> \n            </InputComp>\n            <div>{renderSkillAdders} </div>\n            <AddButton \n              n=\"skillAdders\" \n              text=\"+ Legg til ferdighet\" \n              handler={this.addHandler}> \n            </AddButton>\n          </ul>\n          <ul>\n            <InputComp  \n              id=\"Språk\" \n              handler={this.inputHandler} \n              ph=\"Språk (kan endres)\"> \n            </InputComp>\n            <div>{renderLanguageAdders} </div>\n            <AddButton \n              n=\"languageAdders\" \n              text=\"+ Legg til språk\" \n              handler={this.addHandler}> \n            </AddButton>\n          </ul>\n          <ul>\n            <InputComp \n              id=\"Utdanning\" \n              handler={this.inputHandler} \n              ph=\"Utdanning (kan endres)\"> \n            </InputComp>\n            <div>{renderUtdanningAdders} </div>\n            <AddButton \n              n=\"utdanning\" \n              text=\"+ Legg til utdanning\" \n              handler={this.addHandler} > \n            </AddButton>\n          </ul>\n          <ul>\n            <InputComp  \n              id=\"Erfaring\" \n              handler={this.inputHandler} \n              ph=\"Erfaring (kan endres)\"> \n            </InputComp>\n            <div>{renderErfaringAdders} </div>\n            <AddButton \n              n=\"erfaringer\" \n              text=\"+ Legg til erfaring\" \n              handler={this.addHandler} > \n            </AddButton>\n          </ul>\n          <ul>\n            <InputComp  \n              id=\"Referanser\" \n              handler={this.inputHandler}\n              ph=\"Referanser (kan endres)\"> \n            </InputComp>\n            <div>{renderReferanserAdders} </div>\n            <AddButton \n              n=\"referanser\" \n              text=\"+ Legg til referanse\" \n              handler={this.addHandler} > </AddButton>\n          </ul>\n          <ul>\n            <InputComp  \n              id=\"Fritiden\" \n              handler={this.inputHandler} \n              ph=\"På fritiden (kan endres)\"> \n            </InputComp>\n            <div>{renderFritidenAdders} </div>\n            <AddButton \n              n=\"fritider\" \n              text=\"+ Legg til aktivitet\" \n              handler={this.addHandler} > \n            </AddButton>\n          </ul>\n        </div>\n\n      </div>\n    );\n    //Cv side (høyre side) (preview)\n    let cVPage = (\n      <div className=\"Cv\" >\n          <div className=\"CvWrapper\" id=\"capture\" style={this.state.size2}>\n            <div className=\"SideBarWrapper\" >\n              <div className=\"SideBar\" style = {{\"backgroundColor\": this.state.color}}>\n                       \n                <div className=\" SectionSplitter1\">\n                  {pic}\n                  <Name font={this.state.textSize} fName={this.state.fName} lName={this.state.lName}></Name>\n                  {Detaljer}\n                  <OneLiner font={this.state.textSize} info={this.state.tlf}></OneLiner>\n                  <OneLiner font={this.state.textSize} info={this.state.email}></OneLiner>\n                </div>\n                <div className=\" SectionSplitter1\">\n                  {Ferdigheter}\n                  {renderSkills}\n                </div>\n                <div className=\" SectionSplitter1\">\n                  {Språk}\n                  {renderLanguage}\n                </div>\n              </div>\n            </div>\n            <div className=\"MainContentWrapper\">\n              <div className=\"MainContent\">\n                <div className=\"SectionSplitter\">\n                  <DisplayAboutMe font={this.state.textSize} header={this.state.aboutmeheader} content={this.state.aboutMe}></DisplayAboutMe>\n                </div>\n                <div className=\"SectionSplitter\">\n                  {Utdanning}\n                  {renderUtdanning}\n                </div>\n                <div className=\"SectionSplitter\">\n                  {Erfaring}\n                  {renderErfaring}\n                </div>\n                <div className=\"SectionSplitter\">\n                  {Referanse}\n                  {renderReferanse}\n                </div>\n                <div className=\"SectionSplitter\">\n                  {Fritiden}\n                  {renderFritider}\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n    );\n    let  stylesetter1 = () => {\n\n      let sizesetter1 = {\n        width: \"21cm\",\n        height: \"29.7cm\"\n      };\n      this.setState({ size2: sizesetter1 , textSize : [\"100%\",\"100%\",\"100%\",\"100%\",\"100%\",\"100%\"]});\n    };// hjelpemetode for eksportfunksjon\n  \n    // hjelpemetode for exportfunksjon\n    let stylesetter2 = () => {\n      this.setState({ size2: this.state.oldSize, textSize: [\"0.9vw\", \"0.75vw\", \"0.7vw\", \"0.65vw\", \"0.5vW\", \"0.4vw\"] });\n      console.log(this.state.oldSize)\n    };\n\n\n    // eksportfunksjon\n    const htmlToPdf = () => {\n      let domElement = document.getElementById('capture');\n      htmlToImage.toJpeg(domElement)\n        .then(function (dataUrl) {\n          const pdf = new jsPDF();\n          pdf.addImage(dataUrl, 'pdf', 0, 0);\n          pdf.save(\"download.pdf\");\n          stylesetter2();\n        });\n    };\n\n\n    return (\n      <div className=\"App\">\n        {editPage}\n        <button onMouseDown = {stylesetter1} onClick = {htmlToPdf} className=\"DownloadButton\" > Export pdf</button>\n        {cVPage}\n      </div>\n    );\n  };\n}\n\nexport default App;\n","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\reportWebVitals.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\InputComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Name.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\OneLiner.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LinkComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AddButton.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\LinkAdder.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AboutMeComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\DisplayAboutMe.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\UtdanningEditor.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ReferanseComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Referanser.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\SkillComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\FivePointComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LangComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\pictureAdder.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\cvPic.js",["89"],"import React from 'react';\r\nconst cvPic = props => {\r\n    return(\r\n        <div>\r\n            <img className = \"Picture\" src = {props.img} ></img>\r\n        </div>\r\n    )\r\n}\r\nexport default cvPic","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ColorSelector.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":248,"column":23,"nodeType":"96","messageId":"97","endLine":248,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":5,"column":13,"nodeType":"100","endLine":5,"endColumn":59},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]