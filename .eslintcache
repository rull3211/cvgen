[{"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\index.js":"1","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\App.js":"2","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\reportWebVitals.js":"3","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\InputComp.js":"4","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Name.js":"5","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\OneLiner.js":"6","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LinkComp.js":"7","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AddButton.js":"8","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\LinkAdder.js":"9","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AboutMeComp.js":"10","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\DisplayAboutMe.js":"11","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\UtdanningEditor.js":"12","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ReferanseComp.js":"13","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Referanser.js":"14","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\SkillComp.js":"15","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\FivePointComp.js":"16","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LangComp.js":"17","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\pictureAdder.js":"18","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\cvPic.js":"19","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ColorSelector.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":18706,"mtime":1620645992959,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":372,"mtime":1620644950343,"results":"25","hashOfConfig":"22"},{"size":161,"mtime":1620574912404,"results":"26","hashOfConfig":"22"},{"size":202,"mtime":1620566654569,"results":"27","hashOfConfig":"22"},{"size":245,"mtime":1611079492475,"results":"28","hashOfConfig":"29"},{"size":344,"mtime":1611213128231,"results":"30","hashOfConfig":"22"},{"size":1174,"mtime":1620644930591,"results":"31","hashOfConfig":"22"},{"size":647,"mtime":1620644833847,"results":"32","hashOfConfig":"22"},{"size":299,"mtime":1620636373908,"results":"33","hashOfConfig":"22"},{"size":3150,"mtime":1620645047472,"results":"34","hashOfConfig":"22"},{"size":1833,"mtime":1620644931247,"results":"35","hashOfConfig":"22"},{"size":760,"mtime":1620572853373,"results":"36","hashOfConfig":"22"},{"size":662,"mtime":1620644931848,"results":"37","hashOfConfig":"22"},{"size":1140,"mtime":1620570955751,"results":"38","hashOfConfig":"22"},{"size":328,"mtime":1620585457215,"results":"39","hashOfConfig":"22"},{"size":386,"mtime":1620592470065,"results":"40","hashOfConfig":"22"},{"size":168,"mtime":1620574703053,"results":"41","hashOfConfig":"22"},{"size":222,"mtime":1614596062388,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1cynxyt",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"160bvp5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\index.js",[],["86","87"],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\App.js",["88"],"import './App.css';\nimport React, { Component } from 'react';\nimport InputComp from './editorComponents/InputComp';\nimport Name from './displayComponents/Name';\nimport OneLiner from './displayComponents/OneLiner';\nimport AddButton from './editorComponents/AddButton';\nimport LinkAdder from './editorComponents/LinkAdder';\nimport AboutMeComp from './editorComponents/AboutMeComp'\nimport DisplayAboutMe from './displayComponents/DisplayAboutMe';\nimport UtdanningEditor from './editorComponents/UtdanningEditor';\nimport ReferaneComp from './editorComponents/ReferanseComp';\nimport SkillComp from './editorComponents/SkillComp';\nimport FivePointComp from './displayComponents/FivePointComp';\nimport Referanser from './displayComponents/Referanser'\nimport LangComp from './displayComponents/LangComp';\nimport jsPDF from 'jspdf';\nimport * as htmlToImage from 'html-to-image';\nimport PictureAdder from \"./editorComponents/pictureAdder\";\nimport CvPic from \"./displayComponents/cvPic\";\nimport ColorSelector from \"./editorComponents/ColorSelector\"\n\nclass App extends Component {\n  state = {\n    //detaljer\n    fName: \"\",\n    lName: \"\",\n    tlf: \"\",\n    email: \"\",\n    aboutMe: \"\",\n    //seksjonsoverskrifter\n    aboutmeheader: \"Om meg\",\n    Detaljer: \"Detaljer\",\n    Linker: \"Linker\",\n    Ferdigheter: \"Ferdigheter\",\n    Språk: \"Språk\",\n    Utdanning: \"Utdanning\",\n    Erfaring: \"Erfaring\",\n    Referanse: \"Referanser\",\n    Fritiden: \"På fritiden\",\n    // containere for informasjon i cven\n    skillAdders: [],\n    languageAdders: [],\n    utdanning: [],\n    erfaringer: [],\n    referanser: [],\n    fritider: [],\n    color : \"rgb(8, 76, 65)\",\n    preview : false,\n    buttonText : \"Åpne forhåndsvisning\",\n    img: \"\"\n  };\n\n  inputHandler = event => {\n    let newS = {};\n    newS[event.target.id] = event.target.value;\n    this.setState(newS);\n  }; // behandler alle inputeventer hvor indeks ikke er nødvendig\n\n  indexedInputHandler = (index, event) => {\n    let id = event.target.className;\n    let newLi = this.state[id];\n    let newObj = newLi[index];\n    newObj[event.target.id] = event.target.value;\n    newLi[index] = newObj;\n    this.setState(newLi);\n  }; // behandler alle eventer relatert til input hvor indeks er nødvendig\n\n  previewHandler = event => {\n    let preview = this.state.preview\n    let buttonText = \"\"\n    if(!preview){\n      buttonText = \"Lukk forhåndsvisning\"\n      if(this.state.aboutmeheader.trim() ===\"\"){\n        this.setState({aboutmeheader: \"Om meg\"})\n      }\n      if(this.state.Detaljer.trim() ===\"\"){\n        this.setState({Detaljer: \"Detaljer\"})\n      }\n      if(this.state.Linker.trim() ===\"\"){\n        this.setState({Linker: \"Linker\"})\n      }\n      if(this.state.Ferdigheter.trim() ===\"\"){\n        this.setState({Ferdigheter: \"Ferdigheter\"})\n      }\n      if(this.state.Språk.trim() ===\"\"){\n        this.setState({Språk: \"Språk\"})\n      }\n      if(this.state.Utdanning.trim() ===\"\"){\n        this.setState({Utdanning: \"Utdanning\"})\n      }\n      if(this.state.Erfaring.trim() ===\"\"){\n        this.setState({Erfaring: \"Erfaring\"})\n      }\n      if(this.state.Referanse.trim() ===\"\"){\n        this.setState({Referanse: \"Referanser\"})\n      }\n      if(this.state.Fritiden.trim() ===\"\"){\n        this.setState({Fritiden: \"På fritiden\"})\n      }\n   \n    }\n    else{\n      buttonText = \"Åpne forhåndsvisning\"\n    }\n\n    this.setState({preview: !preview, buttonText: buttonText})\n  }\n  addHandler = (event) => {\n    if (event.keyCode === 13 || event.type === \"click\") {\n      let id = event.target.getAttribute(\"n\");\n      let element = this.state[id].slice();\n      element.push({});\n      let newObj = {};\n      newObj[id] = element;\n      this.setState(newObj);\n    };\n  }; // behandler alle eventer relatert til addbutton\n\n \n  imageHandler = (event) => {\n    var selectedFile = event.target.files[0];\n    var reader = new FileReader();\n  \n\n    reader.onload = event => {\n      this.setState({img : event.target.result})\n      \n    };\n    reader.readAsDataURL(selectedFile)\n    console.log(this.state.img)\n  }\n  ColorSelectorHandler = event => {\n    this.setState({color : event.target.style.backgroundColor})\n    \n  }\n  \n  render() {\n    \n    let OmMeg = (<h1 className=\"size1\">{this.state.aboutmeheader}</h1>)\n    let Detaljer = (<h1  className = \"size6\">{this.state.Detaljer} </h1>);\n    let Ferdigheter = (<h1 className = \"size6\">{this.state.Ferdigheter} </h1>);\n    let Språk = (<h1  className = \"size6\">{this.state.Språk} </h1>);\n    let Utdanning = (<h1  className = \"size1\">{this.state.Utdanning} </h1>);\n    let Erfaring = (<h1 className = \"size1\">{this.state.Erfaring} </h1>);\n    let Referanse = (<h1  className = \"size1\">{this.state.Referanse} </h1>);\n    let Fritiden = (<h1  className = \"size1\">{this.state.Fritiden} </h1>);\n\n  // editor/adder elementer\n    let renderLanguageAdders = this.state.languageAdders.map((el, index) => {\n      return (\n        <LinkAdder\n          handler={this.indexedInputHandler.bind(this, index)}\n          cname=\"languageAdders\"\n          id1=\"språk\"\n          id2=\"nivå\"\n          ph1=\"Språk\"\n          ph2=\"Nivå\"\n          key={index}\n          val={this.state.languageAdders[index]}\n          >\n        </LinkAdder>);\n    });\n    let renderSkillAdders = this.state.skillAdders.map((el, index) => {\n      return (\n        <SkillComp \n          key={index} \n          handler={this.indexedInputHandler.bind(this, index)}\n          val = {this.state.skillAdders[index].skill}\n          >\n        </SkillComp>);\n    });\n    let renderUtdanningAdders = this.state.utdanning.map((el, index) => {\n      return (\n        <UtdanningEditor\n          key={index}\n          cname=\"utdanning\"\n          handler={this.indexedInputHandler.bind(this, index)}\n          ph={[\"Grad\", \"Skole\", \"Start\", \"Slutt\", \"By\"]}\n          val = {this.state.utdanning[index]}\n          >\n        </UtdanningEditor>\n      );\n    });\n    let renderErfaringAdders = this.state.erfaringer.map((el, index) => {\n      return (\n        <UtdanningEditor\n          key={index}\n          cname=\"erfaringer\"\n          handler={this.indexedInputHandler.bind(this, index)}\n          ph={[\"Tittel/jobb\", \"Ansetter/institusjon\", \"Start\", \"Slutt\", \"By\"]}\n          val = {this.state.erfaringer[index]}>\n        </UtdanningEditor>\n      );\n    });\n    let renderReferanserAdders = this.state.referanser.map((el, index) => {\n      return (\n        <ReferaneComp\n          handler={this.indexedInputHandler.bind(this, index)}\n          cname=\"referanser\"\n          key={index}\n          val = {this.state.referanser[index]}>\n        </ReferaneComp>\n      );\n    });\n    let renderFritidenAdders = this.state.fritider.map((el, index) => {\n      return (\n        <UtdanningEditor\n          cname=\"fritider\"\n          handler={this.indexedInputHandler.bind(this, index)}\n          ph={[\"Funksjonstittel/handling\", \"Ansetter/institusjon\", \"Start\", \"Slutt\", \"By\"]}\n          key={index}\n          val = {this.state.fritider[index]}>\n        </UtdanningEditor>\n      );\n    });\n\n\n    // Cv element renderere\n    let renderSkills = this.state.skillAdders.map((el, index) => {\n      return (\n        <p className = \"size4\" key={index}>\n          {el.skill}\n        </p>);\n    });\n    let renderLanguage = this.state.languageAdders.map((el, index) => {\n      return (\n        <LangComp \n          key={index} \n          språk={el.språk} \n          nivå={el.nivå}>\n        </LangComp>);\n    });\n    let renderUtdanning = this.state.utdanning.map((el, index) => {\n      return (\n        <FivePointComp\n          info={[el.grad, el.skole, el.by, el.start, el.slutt, el.beskrivelse]}\n          key={index}>\n        </FivePointComp>\n\n      );\n    });\n    let renderErfaring = this.state.erfaringer.map((el, index) => {\n      return (\n        <FivePointComp\n        info={[el.grad, el.skole, el.by, el.start, el.slutt, el.beskrivelse]}\n          font={this.state.textSize}\n          key={index}>\n        </FivePointComp>\n      );\n    });\n    let renderFritider = this.state.fritider.map((el, index) => {\n      return (\n        <FivePointComp\n        info={[el.grad, el.skole, el.by, el.start, el.slutt, el.beskrivelse]}\n          font={this.state.textSize}\n          key={index}>\n        </FivePointComp>\n      );\n    });\n    let renderReferanse = this.state.referanser.map((el, index) => {\n      return (\n        <Referanser \n          key={index} \n          font={this.state.textSize} \n          info={[el.navn, el.org, el.tlf, el.email]}> \n        </Referanser>\n      );\n    });\n    \n    let pic = null\n\n    if(this.state.img !== \"\"){\n      pic = <CvPic img = {this.state.img} ></CvPic>\n    }\n    \n    // editpage (venstre side) (form)\n    let editPage = (\n      <div className=\"EditPage\">\n        <div className=\"EditPageWrapper\">\n            <div className = \"FirstBlock\">\n              <div className = \"FirstRow\">\n                  <div className = \"overskriftWrapper\">\n                    <InputComp val = {this.state.Detaljer} cName = \"overskriftInput\" id=\"Detaljer\" handler={this.inputHandler} ph=\"Detaljer\"></InputComp>\n                      <p>- (Overksrift - kan endres)</p>\n                  </div>\n                      \n                  <div className = \"ColorSelectors\">\n                        <ColorSelector color = \"rgb(0, 89, 255)\" handler = {this.ColorSelectorHandler}></ColorSelector>\n                        <ColorSelector color = \"rgb(8, 76, 65)\" handler = {this.ColorSelectorHandler}></ColorSelector>\n                        <ColorSelector color = \"rgb(170, 113, 6)\" handler = {this.ColorSelectorHandler}></ColorSelector>\n                  </div>\n                </div>\n                <PictureAdder handler = {this.imageHandler}></PictureAdder>\n                <div className=\"DetaljWrapper\">\n                  <div className=\"LeftSide\">\n                    <p>Fornavn</p>\n                    <InputComp \n                      handler={this.inputHandler} \n                      id={\"fName\"} \n                      cName = \"infoInput\"\n                      val={this.state.fName} > \n                    </InputComp>\n                  </div>\n                  <div className = \"RightSide\">\n                    <p>Etternavn</p>\n                    <InputComp \n                      handler={this.inputHandler} \n                      id={\"lName\"} \n                      cName = \"infoInput\"\n                      val={this.state.lName} > \n                    </InputComp>\n                  </div>\n                </div>\n                <div className=\"DetaljWrapper\">\n                  <div className=\"LeftSide\">\n                    <p>Telefonnummer</p>\n                    <InputComp\n                      handler={this.inputHandler} \n                      id={\"tlf\"}\n                      cName = \"infoInput\"\n                      val={this.state.tlf} > \n                    </InputComp>\n                  </div>\n                  <div className = \"RightSide\">\n                    <p>Email</p>\n                    <InputComp \n                      handler={this.inputHandler} \n                      id={\"email\"} \n                      cName = \"infoInput\"\n                      val={this.state.email} > \n                    </InputComp>\n                  </div>\n                </div>\n                <div>\n                  <div className = \"overskriftWrapper\">\n                    <InputComp val = {this.state.aboutmeheader} cName = \"overskriftInput\" id=\"aboutmeheader\" handler={this.inputHandler} ph=\"Om meg\"></InputComp>\n                    <p>- (Overksrift - kan endres)</p>\n                  </div>\n                \n                  <AboutMeComp handler={this.inputHandler}\n                    val={this.state.aboutMe}\n                  ></AboutMeComp>\n                </div>\n            </div>\n            \n      \n          <ul className=\"Skill\">\n            \n            <div className = \"overskriftWrapper\">\n              <InputComp  \n                id=\"Ferdigheter\" \n                cName = \"overskriftInput\"\n                val = {this.state.Ferdigheter}\n                handler={this.inputHandler} \n                ph=\"Ferdigheter\"> \n              </InputComp>\n              <p>- (Overksrift - kan endres)</p>\n            </div>\n            {renderSkillAdders}\n            <AddButton \n              n=\"skillAdders\" \n              text=\"+ Legg til ferdighet\" \n              handler={this.addHandler}> \n            </AddButton>\n          </ul>\n          <ul className =\"Språk\">\n           \n            <div className = \"overskriftWrapper\">\n               <InputComp  \n                id=\"Språk\" \n                cName = \"overskriftInput\"\n                val = {this.state.Språk}\n                handler={this.inputHandler} \n                ph=\"Språk\"> \n              </InputComp>\n              <p>- (Overksrift - kan endres)</p>\n            </div>\n            {renderLanguageAdders}\n            <AddButton \n              n=\"languageAdders\" \n              text=\"+ Legg til språk\" \n              handler={this.addHandler}> \n            </AddButton>\n          </ul>\n          <ul className = \"Utdanning\">\n           \n            <div className = \"overskriftWrapper\">\n              <InputComp \n                id=\"Utdanning\" \n                cName = \"overskriftInput\"\n                val = {this.state.Utdanning}\n                handler={this.inputHandler} \n                ph=\"Utdanning\"> \n              </InputComp>\n              <p>- (Overksrift - kan endres)</p>\n            </div>\n            {renderUtdanningAdders}\n            <AddButton \n              n=\"utdanning\" \n              text=\"+ Legg til utdanning\" \n              handler={this.addHandler} > \n            </AddButton>\n          </ul>\n          <ul className =\"Erfaring\">\n            \n            <div className = \"overskriftWrapper\">\n              <InputComp  \n                id=\"Erfaring\" \n                cName = \"overskriftInput\"\n                handler={this.inputHandler} \n                val = {this.state.Erfaring}\n                ph=\"Erfaring\"> \n              </InputComp>\n              <p>- (Overksrift - kan endres)</p>\n            </div>\n            {renderErfaringAdders}\n            <AddButton \n              n=\"erfaringer\" \n              text=\"+ Legg til erfaring\" \n              handler={this.addHandler} > \n            </AddButton>\n          </ul>\n          <ul className = \"Referanser\">\n           \n            <div className = \"overskriftWrapper\">\n              <InputComp  \n                id=\"Referanser\" \n                cName = \"overskriftInput\"\n                val = {this.state.Referanse}\n                handler={this.inputHandler}\n                ph=\"Referanser\"> \n              </InputComp>\n              <p>- (Overksrift - kan endres)</p>\n            </div>\n            <div>{renderReferanserAdders} </div>\n            <AddButton \n              n=\"referanser\" \n              text=\"+ Legg til referanse\" \n              handler={this.addHandler} > </AddButton>\n          </ul>\n          <ul className = \"Fritiden\">\n           \n            <div className = \"overskriftWrapper\">\n              <InputComp  \n                id=\"Fritiden\" \n                cName = \"overskriftInput\"\n                handler={this.inputHandler} \n                val = {this.state.Fritiden}\n                ph = \"På fritiden\"\n              ></InputComp>\n              <p>- (Overksrift - kan endres)</p>\n            </div>\n            {renderFritidenAdders}\n            <AddButton \n              n=\"fritider\" \n              text=\"+ Legg til aktivitet\" \n              handler={this.addHandler} > \n            </AddButton>\n          </ul>\n        </div>\n\n      </div>\n    );\n    //Cv side (høyre side) (preview)\n    let cVPage = (\n      <div className=\"Cv\" >\n          <div className=\"CvWrapper\" id=\"capture\" style={this.state.size2}>\n            <div className=\"SideBarWrapper\" >\n              <div className=\"SideBar\" style = {{\"backgroundColor\": this.state.color}}>\n                <div className = \"sidebarTop\">\n                  {this.state.img !== \"\" ? pic : null}\n                  <Name fName={this.state.fName} lName={this.state.lName}></Name>\n                </div>\n                <div className=\" SectionSplitter1\">\n                  {this.state.tlf || this.state.email !== \"\" ? Detaljer : null}\n                  {this.state.tlf ? <p className = \"size4\">{this.state.tlf}</p> :null}\n                  {this.state.email ? <p className = \"size4\">{this.state.email}</p> : null}\n                </div>\n                <div className=\" SectionSplitter1\">\n                  {this.state.skillAdders.length > 0 ? Ferdigheter : null}\n                  {renderSkills}\n                </div>\n                <div className=\" SectionSplitter1\">\n                  {this.state.languageAdders.length > 0 ? Språk : null}\n                  {renderLanguage}\n                </div>\n              </div>\n            </div>\n            <div className=\"MainContentWrapper\">\n              <div className=\"MainContent\">\n                <div className=\"SectionSplitter\">\n                  {this.state.aboutMe !== \"\" ? OmMeg : null}\n                  <DisplayAboutMe content={this.state.aboutMe}></DisplayAboutMe>\n                </div>\n                <div className=\"SectionSplitter\">\n                  {this.state.utdanning.length > 0 ? Utdanning : null}\n                  {renderUtdanning}\n                </div>\n                <div className=\"SectionSplitter\">\n                  {this.state.erfaringerlength > 0 ? Erfaring : null}\n                  {renderErfaring}\n                </div>\n                <div className=\"SectionSplitter\">\n                  {this.state.referanser.length > 0 ? Referanse : null}\n                  {renderReferanse}\n                </div>\n                <div className=\"SectionSplitter\">\n                  {this.state.fritider.length > 0 ? Fritiden : null}\n                  {renderFritider}\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n    );\n \n\n    \n\n    // eksportfunksjon\n    const htmlToPdf = () => {\n      let domElement = document.getElementById('capture');\n      htmlToImage.toJpeg(domElement)\n        .then(function (dataUrl) {\n          const pdf = new jsPDF();\n          pdf.addImage(dataUrl, 'pdf', 0, 0);\n          pdf.save(\"download.pdf\");\n        });\n    };\n\n\n    return (\n      <div className=\"App\">\n        {!this.state.preview ? editPage  : !editPage }\n        <button className=\"previewButton\" onClick = {this.previewHandler}> {this.state.buttonText}</button>\n        {this.state.preview ? <button onClick = {htmlToPdf} className=\"DownloadButton\" > Export pdf</button> : null}\n        {this.state.preview ? cVPage : !cVPage}\n      </div>\n    );\n  };\n}\n\nexport default App;\n","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\reportWebVitals.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\InputComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Name.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\OneLiner.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LinkComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AddButton.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\LinkAdder.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\AboutMeComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\DisplayAboutMe.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\UtdanningEditor.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ReferanseComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\Referanser.js",["89"],"import React from 'react';\r\nconst Referanser = (props)=>{\r\n      const style1 = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n      }\r\n   \r\n      let dash = \"\"\r\n      let comma = \"\"\r\n     \r\n      if (props.info[1] !== undefined){\r\n            comma = \", \"\r\n      }\r\n      if (props.info[3] !== undefined){\r\n            dash = \" | \"\r\n      }\r\n      return(\r\n            <div >\r\n                  \r\n                  <p className = \"size5\">\r\n                        {props.info[0]}{comma}{props.info[1]} \r\n                  </p>\r\n                  <p className = \"size3\" >\r\n                        {props.info[2]}{dash}{props.info[3]} \r\n                  </p>\r\n                  \r\n            </div>\r\n      )\r\n}\r\nexport default Referanser","C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\SkillComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\FivePointComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\LangComp.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\pictureAdder.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\displayComponents\\cvPic.js",[],"C:\\Users\\bence\\Desktop\\cvBbuilder\\cv_builder\\src\\editorComponents\\ColorSelector.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":3,"column":13,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'OneLiner' is defined but never used.","Identifier","unusedVar","'style1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]